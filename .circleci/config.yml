# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  python: circleci/python@1.5.0
  docker: circleci/docker@2.0.2

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run unit tests
          command: |
            mkdir test-results
            python3 manage.py test
            pytest --junitxml=test-results/junit.xml
      - run:
          name: Run flake8
          command: flake8
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  deploy-docker:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Start container and push to Docker
          command: | 
            docker build -t $DOCKER_HUB_USER/p13orangecountylettings:$CIRCLE_SHA1 .
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
            docker push $DOCKER_HUB_USER/p13orangecountylettings:$CIRCLE_SHA1
  
  deploy-heroku:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          name: Start container and push to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a ${HEROKU_APP_NAME} web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a ${HEROKU_APP_NAME} web
         

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  P13_lettings:
    jobs:
    - build-and-test
    - deploy-docker:
        requires:
          - build-and-test
        filters:
          branches:
            only:
              - master
    - deploy-heroku:
          requires:
            - deploy-docker
          filters:
            branches:
              only:
                - master